---
// This component handles all the structured data (Schema.org) for SEO

interface Props {
  type?: 'person' | 'website';
  title?: string;
  description?: string;
  imageUrl?: string;
}

const {
  type = 'person',
  title = 'Zandler Oliveira | SRE',
  description = 'Portifolio, skill and experience',
  imageUrl = 'https://renatokhael.com/android-chrome-512x512.png'
} = Astro.props;

const baseUrl = 'https://zandler.com.br';

// Person Schema
const personSchema = {
  "@context": "https://schema.org",
  "@type": "Person",
  "name": "Renato Khael",
  "url": baseUrl,
  "image": `${baseUrl}/android-chrome-512x512.png`,
  "sameAs": [
    "https://www.linkedin.com/in/zandler-oliveira/",
    "https://www.youtube.com/@zandler"
  ],
  "jobTitle": "Site Reliability Engineer",
  "worksFor": {
    "@type": "Organization",
    "name": "Zandler Oliveira"
  },
  "description": description
};

// Website Schema
const websiteSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "url": baseUrl,
  "name": title,
  "description": description,
  "author": {
    "@type": "Person",
    "name": "Zandler Oliveira"
  },
  "potentialAction": {
    "@type": "SearchAction",
    "target": `${baseUrl}/search?q={search_term_string}`,
    "query-input": "required name=search_term_string"
  }
};

// Choose which schema to use based on the type prop
const schema = type === 'person' ? personSchema : websiteSchema;
---

<script type="application/ld+json" set:html={JSON.stringify(schema)}></script> 